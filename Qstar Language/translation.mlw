let p = {
    id = "program";
    aux = [

{
 id = "diffusor";
circ = {
qregs= ["qr"; "aux"];
body = [
Unitary (Apply {gate=H; qreg="qr"; range={starts="0"; ends="n"}});
Unitary (Apply {gate=X; qreg="qr"; range={starts="0"; ends="n"}});
Unitary(WithControl{gate= Z; ctls=["0 to Minus"]; tg="Minus Num 1"})
Unitary (Apply {gate=X; qreg="qr"; range={starts="0"; ends="n"}});
Unitary (Apply {gate=H; qreg="qr"; range={starts="0"; ends="n"}});
Return "";
];
params = [{id="qr";  type_=Qreg}; {id="aux";  type_=Qreg}; ];

pre = ["{true}"; ];

pos = ["{true}"; ];

}
};
{
 id = "oracle";
circ = {
qregs= ["qr"];
body = [
Return "";
];
params = [{id="qr";  type_=Qreg}; {id="aux";  type_=Qreg}; ];

pre = ["{true}"; ];

pos = ["{true}"; ];

}
};
{
 id = "grover_iter";
circ = {
qregs= ["qr"];
body = [
Unitary (FUN {id="oracle"; args=["Var "qr""; "Var "aux""; ]};
Unitary (FUN {id="diffusor"; args=["Var "qr""; "Var "aux""; ]};
Return "";
];
params = [{id="qr";  type_=Qreg}; {id="aux";  type_=Qreg}; ];

pre = ["{true}"; ];

pos = ["{true}"; ];

}
};
{
 id = "init";
circ = {
qregs= ["qr"; "aux"];
body = [
Unitary (Apply {gate=H; qreg="qr"; range={starts="0"; ends="Minus"}});
Unitary (Apply {gate=X; qreg="aux"; range={starts="0"; ends="n"}});
Unitary (Apply {gate=H; qreg="aux"; range={starts="0"; ends="n"}});
Return "";
];
params = [{id="qr";  type_=Qreg}; {id="aux";  type_=Qreg}; ];

pre = ["{true}"; ];

pos = ["{true}"; ];

}
};
];
main = {
 id = "grover";
circ = {
qregs= ["qr"; "aux"];
body = [
Unitary (FUN {id="init"; args=["Var "qr""; "Var "aux""; ]};
For {
iter = {
iterator= "i";
starts = "0";
ends = "Var "iters""};
inv = ["{true}"; ];
body = [
Unitary (FUN {id="grover_iter"; args=["Var "qr""; "Var "aux""; ]};
];
assertion=[]
};
Return "";
];

pre = ["{true}"; ];

pos = ["{true}"; ];

};
