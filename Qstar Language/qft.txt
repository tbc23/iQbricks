|| qft || (qreg qr, qreg aux)
pre {some-expression}
	circ qr,aux ->
		if (len(qr) == 0) {
			assert { |qr> = |qr'> }
			return
		}
		else {
			for q in range(len(qr)) {  # use while , sequence of instr
				invariant { inv1 } , { inv2 }
				assert { formula2 }
				H(qr[q])  # keep track of registers!! (place hadamard q n)
				assert { |qr> = ps_had |qr'> q}
				for i in range(qr[q..-1]) {
					invariant { inv1 }
					with control qr[i+1] (ph(pi/2^(n-i), qr[q]))
					assert { |qr> = ps_rot(pi/2^(n-i)) |qr'> q }
				}
            }
			assert { |qr> = ps_had |qr'> (len(qr')-1)}
            return
        }
pos {some-expressions}
